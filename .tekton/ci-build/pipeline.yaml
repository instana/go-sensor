# (c) Copyright IBM Corp. 2024

apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: go-tracer-ci-pipeline
spec:
  params:
  - name: revision
    type: string
  - name: git-commit-sha
    type: string
  - name: go-version
    type: string
  - name: excludeDirs
    type: string
  workspaces:
    - name: go-tracer-ci-pipeline-pvc
    - name: cache-pvc
  tasks:

    - name: github-set-check-status-to-pending
      taskRef:
        kind: Task
        name: github-set-status
      params:
      - name: SHA
        value: $(params.git-commit-sha)
      - name: STATE
        value: pending
      - name: PIPELINE_RUN_NAME
        value: $(context.pipelineRun.name)
      - name: go-version
        value: $(params.go-version)

    - name: clone
      params:
      - name: revision
        value: $(params.revision)
      - name: SHA
        value: $(params.git-commit-sha)
      taskRef:
        name: go-tracer-clone-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc

    - name: cache-restore
      params:
      - name: imageTag
        value: $(params.go-version)
      taskRef:
        name: go-tracer-cache-restore-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc
        - name: cache-pvc
          workspace: cache-pvc

    - name: go-fmt
      runAfter:
        - clone
      params:
      - name: imageTag
        value: $(params.go-version)
      - name: excludeDirs
        value: $(params.excludeDirs)
      taskRef:
        name: go-tracer-gofmt-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc

    - name: go-imports
      runAfter:
        - go-fmt
      params:
      - name: imageTag
        value: $(params.go-version)
      - name: excludeDirs
        value: $(params.excludeDirs)
      taskRef:
        name: go-tracer-goimports-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc
    
    - name: unit-test
      runAfter:
        - go-imports
        - cache-restore
      params:
      - name: imageTag
        value: $(params.go-version)
      - name: excludeDirs
        value: $(params.excludeDirs)
      taskRef:
        name: go-tracer-unittest-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc
        - name: cache-pvc
          workspace: cache-pvc

    - name: integration-test-common
      runAfter:
        - unit-test
      params:
      - name: imageTag
        value: $(params.go-version)
      - name: excludeDirs
        value: $(params.excludeDirs)
      taskRef:
        name: go-tracer-integration-common-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc
        - name: cache-pvc
          workspace: cache-pvc

    - name: integration-test-couchbase
      runAfter:
        - integration-test-common
      when:
        - input: "$(params.go-version)"
          operator: in
          values: ["1.22"]
      params:
      - name: imageTag
        value: $(params.go-version)
      - name: excludeDirs
        value: $(params.excludeDirs)
      taskRef:
        name: go-tracer-integration-couchbase-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc
        - name: cache-pvc
          workspace: cache-pvc

    - name: cache-update
      runAfter:
        - integration-test-couchbase
      params:
      - name: imageTag
        value: $(params.go-version)
      taskRef:
        name: go-tracer-cache-update-task
      workspaces:
        - name: task-pvc
          workspace: go-tracer-ci-pipeline-pvc
        - name: cache-pvc
          workspace: cache-pvc

  finally:
    - name: github-set-check-status-to-success-or-failure
      taskRef:
        kind: Task
        name: github-set-status
      params:
      - name: SHA
        value: $(params.git-commit-sha)
      - name: STATE
        value: "$(tasks.status)"
      - name: PIPELINE_RUN_NAME
        value: $(context.pipelineRun.name)
      - name: go-version
        value: $(params.go-version)
