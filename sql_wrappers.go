// (c) Copyright IBM Corp. 2022
// Code generated by sqlgen. DO NOT EDIT.

package instana

import "database/sql/driver"

const (
	// Conn Interfaces
	cExecer = 1 << iota
	cExecerContext
	cQueryer
	cQueryerContext
	cConnPrepareContext
	cNamedValueChecker

	// Stmt Interfaces
	sStmtExecContext
	sStmtQueryContext
	sNamedValueChecker
	sColumnConverter
)

// Types

// [driver.Execer driver.ExecerContext driver.Queryer driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.Queryer driver.QueryerContext driver.ConnPrepareContext]
type w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.ExecerContext driver.Queryer driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.Queryer driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.Queryer driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.Queryer driver.QueryerContext driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_Queryer_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.Execer driver.Queryer driver.QueryerContext driver.NamedValueChecker]
type w_conn_Execer_Queryer_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.Queryer
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.Queryer driver.ConnPrepareContext]
type w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
	driver.ConnPrepareContext
}

// [driver.Queryer driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.Queryer driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.Queryer driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_Queryer_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.Queryer
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.Queryer driver.QueryerContext]
type w_conn_Execer_ExecerContext_Queryer_QueryerContext struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
}

// [driver.Execer driver.ExecerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.Queryer driver.QueryerContext driver.NamedValueChecker]
type w_conn_ExecerContext_Queryer_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.QueryerContext driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.Queryer driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_Queryer_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.Queryer driver.QueryerContext driver.ConnPrepareContext]
type w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.Execer driver.Queryer driver.QueryerContext driver.ConnPrepareContext]
type w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.Execer driver.ExecerContext driver.QueryerContext driver.ConnPrepareContext]
type w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.Execer driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Execer_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.Queryer driver.QueryerContext]
type w_conn_Execer_Queryer_QueryerContext struct {
	driver.Conn
	driver.Execer
	driver.Queryer
	driver.QueryerContext
}

// [driver.Execer driver.QueryerContext driver.ConnPrepareContext]
type w_conn_Execer_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.ExecerContext driver.QueryerContext driver.ConnPrepareContext]
type w_conn_ExecerContext_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.ExecerContext
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.ExecerContext driver.Queryer driver.ConnPrepareContext]
type w_conn_ExecerContext_Queryer_ConnPrepareContext struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
	driver.ConnPrepareContext
}

// [driver.Queryer driver.QueryerContext driver.ConnPrepareContext]
type w_conn_Queryer_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.Queryer
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.Execer driver.Queryer driver.ConnPrepareContext]
type w_conn_Execer_Queryer_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.Queryer
	driver.ConnPrepareContext
}

// [driver.Execer driver.ExecerContext driver.QueryerContext]
type w_conn_Execer_ExecerContext_QueryerContext struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.QueryerContext
}

// [driver.QueryerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_QueryerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.QueryerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.Queryer driver.QueryerContext]
type w_conn_ExecerContext_Queryer_QueryerContext struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
	driver.QueryerContext
}

// [driver.Queryer driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_Queryer_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.Queryer
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_ExecerContext_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.NamedValueChecker]
type w_conn_Execer_ExecerContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.Queryer]
type w_conn_Execer_ExecerContext_Queryer struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.Queryer
}

// [driver.Execer driver.Queryer driver.NamedValueChecker]
type w_conn_Execer_Queryer_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.Queryer
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.Queryer driver.NamedValueChecker]
type w_conn_ExecerContext_Queryer_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext driver.ConnPrepareContext]
type w_conn_Execer_ExecerContext_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
	driver.ConnPrepareContext
}

// [driver.Queryer driver.QueryerContext driver.NamedValueChecker]
type w_conn_Queryer_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.Queryer
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.Execer driver.QueryerContext driver.NamedValueChecker]
type w_conn_Execer_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.QueryerContext driver.NamedValueChecker]
type w_conn_ExecerContext_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.Queryer driver.ConnPrepareContext]
type w_conn_Queryer_ConnPrepareContext struct {
	driver.Conn
	driver.Queryer
	driver.ConnPrepareContext
}

// [driver.Queryer driver.NamedValueChecker]
type w_conn_Queryer_NamedValueChecker struct {
	driver.Conn
	driver.Queryer
	driver.NamedValueChecker
}

// [driver.Execer driver.ExecerContext]
type w_conn_Execer_ExecerContext struct {
	driver.Conn
	driver.Execer
	driver.ExecerContext
}

// [driver.ExecerContext driver.Queryer]
type w_conn_ExecerContext_Queryer struct {
	driver.Conn
	driver.ExecerContext
	driver.Queryer
}

// [driver.QueryerContext driver.ConnPrepareContext]
type w_conn_QueryerContext_ConnPrepareContext struct {
	driver.Conn
	driver.QueryerContext
	driver.ConnPrepareContext
}

// [driver.ConnPrepareContext driver.NamedValueChecker]
type w_conn_ConnPrepareContext_NamedValueChecker struct {
	driver.Conn
	driver.ConnPrepareContext
	driver.NamedValueChecker
}

// [driver.Execer driver.QueryerContext]
type w_conn_Execer_QueryerContext struct {
	driver.Conn
	driver.Execer
	driver.QueryerContext
}

// [driver.ExecerContext driver.NamedValueChecker]
type w_conn_ExecerContext_NamedValueChecker struct {
	driver.Conn
	driver.ExecerContext
	driver.NamedValueChecker
}

// [driver.ExecerContext driver.QueryerContext]
type w_conn_ExecerContext_QueryerContext struct {
	driver.Conn
	driver.ExecerContext
	driver.QueryerContext
}

// [driver.Execer driver.NamedValueChecker]
type w_conn_Execer_NamedValueChecker struct {
	driver.Conn
	driver.Execer
	driver.NamedValueChecker
}

// [driver.Execer driver.Queryer]
type w_conn_Execer_Queryer struct {
	driver.Conn
	driver.Execer
	driver.Queryer
}

// [driver.QueryerContext driver.NamedValueChecker]
type w_conn_QueryerContext_NamedValueChecker struct {
	driver.Conn
	driver.QueryerContext
	driver.NamedValueChecker
}

// [driver.Execer driver.ConnPrepareContext]
type w_conn_Execer_ConnPrepareContext struct {
	driver.Conn
	driver.Execer
	driver.ConnPrepareContext
}

// [driver.ExecerContext driver.ConnPrepareContext]
type w_conn_ExecerContext_ConnPrepareContext struct {
	driver.Conn
	driver.ExecerContext
	driver.ConnPrepareContext
}

// [driver.Queryer driver.QueryerContext]
type w_conn_Queryer_QueryerContext struct {
	driver.Conn
	driver.Queryer
	driver.QueryerContext
}

// [driver.QueryerContext]
type w_conn_QueryerContext struct {
	driver.Conn
	driver.QueryerContext
}

// [driver.Execer]
type w_conn_Execer struct {
	driver.Conn
	driver.Execer
}

// [driver.ConnPrepareContext]
type w_conn_ConnPrepareContext struct {
	driver.Conn
	driver.ConnPrepareContext
}

// [driver.Queryer]
type w_conn_Queryer struct {
	driver.Conn
	driver.Queryer
}

// [driver.NamedValueChecker]
type w_conn_NamedValueChecker struct {
	driver.Conn
	driver.NamedValueChecker
}

// [driver.ExecerContext]
type w_conn_ExecerContext struct {
	driver.Conn
	driver.ExecerContext
}

// [driver.StmtExecContext driver.StmtQueryContext driver.NamedValueChecker driver.ColumnConverter]
type w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker_ColumnConverter struct {
	driver.Stmt
	driver.StmtExecContext
	driver.StmtQueryContext
	driver.NamedValueChecker
	cc driver.ColumnConverter
}

func (w *w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtExecContext driver.StmtQueryContext driver.NamedValueChecker]
type w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker struct {
	driver.Stmt
	driver.StmtExecContext
	driver.StmtQueryContext
	driver.NamedValueChecker
}

// [driver.StmtQueryContext driver.NamedValueChecker driver.ColumnConverter]
type w_stmt_StmtQueryContext_NamedValueChecker_ColumnConverter struct {
	driver.Stmt
	driver.StmtQueryContext
	driver.NamedValueChecker
	cc driver.ColumnConverter
}

func (w *w_stmt_StmtQueryContext_NamedValueChecker_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtExecContext driver.NamedValueChecker driver.ColumnConverter]
type w_stmt_StmtExecContext_NamedValueChecker_ColumnConverter struct {
	driver.Stmt
	driver.StmtExecContext
	driver.NamedValueChecker
	cc driver.ColumnConverter
}

func (w *w_stmt_StmtExecContext_NamedValueChecker_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtExecContext driver.StmtQueryContext driver.ColumnConverter]
type w_stmt_StmtExecContext_StmtQueryContext_ColumnConverter struct {
	driver.Stmt
	driver.StmtExecContext
	driver.StmtQueryContext
	cc driver.ColumnConverter
}

func (w *w_stmt_StmtExecContext_StmtQueryContext_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtQueryContext driver.ColumnConverter]
type w_stmt_StmtQueryContext_ColumnConverter struct {
	driver.Stmt
	driver.StmtQueryContext
	cc driver.ColumnConverter
}

func (w *w_stmt_StmtQueryContext_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtQueryContext driver.NamedValueChecker]
type w_stmt_StmtQueryContext_NamedValueChecker struct {
	driver.Stmt
	driver.StmtQueryContext
	driver.NamedValueChecker
}

// [driver.StmtExecContext driver.ColumnConverter]
type w_stmt_StmtExecContext_ColumnConverter struct {
	driver.Stmt
	driver.StmtExecContext
	cc driver.ColumnConverter
}

func (w *w_stmt_StmtExecContext_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtExecContext driver.NamedValueChecker]
type w_stmt_StmtExecContext_NamedValueChecker struct {
	driver.Stmt
	driver.StmtExecContext
	driver.NamedValueChecker
}

// [driver.NamedValueChecker driver.ColumnConverter]
type w_stmt_NamedValueChecker_ColumnConverter struct {
	driver.Stmt
	driver.NamedValueChecker
	cc driver.ColumnConverter
}

func (w *w_stmt_NamedValueChecker_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtExecContext driver.StmtQueryContext]
type w_stmt_StmtExecContext_StmtQueryContext struct {
	driver.Stmt
	driver.StmtExecContext
	driver.StmtQueryContext
}

// [driver.ColumnConverter]
type w_stmt_ColumnConverter struct {
	driver.Stmt
	cc driver.ColumnConverter
}

func (w *w_stmt_ColumnConverter) ColumnConverter(idx int) driver.ValueConverter {
	return w.cc.ColumnConverter(idx)
}

// [driver.StmtExecContext]
type w_stmt_StmtExecContext struct {
	driver.Stmt
	driver.StmtExecContext
}

// [driver.NamedValueChecker]
type w_stmt_NamedValueChecker struct {
	driver.Stmt
	driver.NamedValueChecker
}

// [driver.StmtQueryContext]
type w_stmt_StmtQueryContext struct {
	driver.Stmt
	driver.StmtQueryContext
}

// connAlreadyWrapped returns true if conn is already instrumented
func connAlreadyWrapped(conn driver.Conn) bool {
	switch conn.(type) {
	case *wConn, *w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext, *w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_ExecerContext_Queryer_QueryerContext_NamedValueChecker, *w_conn_Execer_Queryer_QueryerContext_NamedValueChecker, *w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext, *w_conn_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_Queryer_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_ExecerContext_Queryer_QueryerContext, *w_conn_Execer_ExecerContext_ConnPrepareContext_NamedValueChecker, *w_conn_ExecerContext_Queryer_QueryerContext_NamedValueChecker, *w_conn_Execer_ExecerContext_QueryerContext_NamedValueChecker, *w_conn_Execer_ExecerContext_Queryer_NamedValueChecker, *w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext, *w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext, *w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext, *w_conn_Execer_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_Queryer_QueryerContext, *w_conn_Execer_QueryerContext_ConnPrepareContext, *w_conn_ExecerContext_QueryerContext_ConnPrepareContext, *w_conn_ExecerContext_Queryer_ConnPrepareContext, *w_conn_Queryer_QueryerContext_ConnPrepareContext, *w_conn_Execer_Queryer_ConnPrepareContext, *w_conn_Execer_ExecerContext_QueryerContext, *w_conn_QueryerContext_ConnPrepareContext_NamedValueChecker, *w_conn_ExecerContext_Queryer_QueryerContext, *w_conn_Queryer_ConnPrepareContext_NamedValueChecker, *w_conn_ExecerContext_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_ExecerContext_NamedValueChecker, *w_conn_Execer_ExecerContext_Queryer, *w_conn_Execer_Queryer_NamedValueChecker, *w_conn_ExecerContext_Queryer_NamedValueChecker, *w_conn_Execer_ExecerContext_ConnPrepareContext, *w_conn_Queryer_QueryerContext_NamedValueChecker, *w_conn_Execer_QueryerContext_NamedValueChecker, *w_conn_ExecerContext_QueryerContext_NamedValueChecker, *w_conn_Queryer_ConnPrepareContext, *w_conn_Queryer_NamedValueChecker, *w_conn_Execer_ExecerContext, *w_conn_ExecerContext_Queryer, *w_conn_QueryerContext_ConnPrepareContext, *w_conn_ConnPrepareContext_NamedValueChecker, *w_conn_Execer_QueryerContext, *w_conn_ExecerContext_NamedValueChecker, *w_conn_ExecerContext_QueryerContext, *w_conn_Execer_NamedValueChecker, *w_conn_Execer_Queryer, *w_conn_QueryerContext_NamedValueChecker, *w_conn_Execer_ConnPrepareContext, *w_conn_ExecerContext_ConnPrepareContext, *w_conn_Queryer_QueryerContext, *w_conn_QueryerContext, *w_conn_Execer, *w_conn_ConnPrepareContext, *w_conn_Queryer, *w_conn_NamedValueChecker, *w_conn_ExecerContext:
		return true
	case w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext, w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker, w_conn_Execer_ExecerContext_Queryer_QueryerContext_NamedValueChecker, w_conn_Execer_Queryer_QueryerContext_NamedValueChecker, w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext, w_conn_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_Execer_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker, w_conn_Execer_Queryer_ConnPrepareContext_NamedValueChecker, w_conn_Execer_ExecerContext_Queryer_QueryerContext, w_conn_Execer_ExecerContext_ConnPrepareContext_NamedValueChecker, w_conn_ExecerContext_Queryer_QueryerContext_NamedValueChecker, w_conn_Execer_ExecerContext_QueryerContext_NamedValueChecker, w_conn_Execer_ExecerContext_Queryer_NamedValueChecker, w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext, w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext, w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext, w_conn_Execer_ConnPrepareContext_NamedValueChecker, w_conn_Execer_Queryer_QueryerContext, w_conn_Execer_QueryerContext_ConnPrepareContext, w_conn_ExecerContext_QueryerContext_ConnPrepareContext, w_conn_ExecerContext_Queryer_ConnPrepareContext, w_conn_Queryer_QueryerContext_ConnPrepareContext, w_conn_Execer_Queryer_ConnPrepareContext, w_conn_Execer_ExecerContext_QueryerContext, w_conn_QueryerContext_ConnPrepareContext_NamedValueChecker, w_conn_ExecerContext_Queryer_QueryerContext, w_conn_Queryer_ConnPrepareContext_NamedValueChecker, w_conn_ExecerContext_ConnPrepareContext_NamedValueChecker, w_conn_Execer_ExecerContext_NamedValueChecker, w_conn_Execer_ExecerContext_Queryer, w_conn_Execer_Queryer_NamedValueChecker, w_conn_ExecerContext_Queryer_NamedValueChecker, w_conn_Execer_ExecerContext_ConnPrepareContext, w_conn_Queryer_QueryerContext_NamedValueChecker, w_conn_Execer_QueryerContext_NamedValueChecker, w_conn_ExecerContext_QueryerContext_NamedValueChecker, w_conn_Queryer_ConnPrepareContext, w_conn_Queryer_NamedValueChecker, w_conn_Execer_ExecerContext, w_conn_ExecerContext_Queryer, w_conn_QueryerContext_ConnPrepareContext, w_conn_ConnPrepareContext_NamedValueChecker, w_conn_Execer_QueryerContext, w_conn_ExecerContext_NamedValueChecker, w_conn_ExecerContext_QueryerContext, w_conn_Execer_NamedValueChecker, w_conn_Execer_Queryer, w_conn_QueryerContext_NamedValueChecker, w_conn_Execer_ConnPrepareContext, w_conn_ExecerContext_ConnPrepareContext, w_conn_Queryer_QueryerContext, w_conn_QueryerContext, w_conn_Execer, w_conn_ConnPrepareContext, w_conn_Queryer, w_conn_NamedValueChecker, w_conn_ExecerContext:
		return true
	}
	return false
}

// wrapConn wraps the matching type around the driver.Conn based on which interfaces the driver implements
func wrapConn(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor) driver.Conn {
	var key int

	Execer, isExecer := conn.(driver.Execer)
	ExecerContext, isExecerContext := conn.(driver.ExecerContext)
	Queryer, isQueryer := conn.(driver.Queryer)
	QueryerContext, isQueryerContext := conn.(driver.QueryerContext)
	ConnPrepareContext, isConnPrepareContext := conn.(driver.ConnPrepareContext)
	NamedValueChecker, isNamedValueChecker := conn.(driver.NamedValueChecker)

	if isExecer {
		key |= cExecer
	}
	if isExecerContext {
		key |= cExecerContext
	}
	if isQueryer {
		key |= cQueryer
	}
	if isQueryerContext {
		key |= cQueryerContext
	}
	if isConnPrepareContext {
		key |= cConnPrepareContext
	}
	if isNamedValueChecker {
		key |= cNamedValueChecker
	}

	if f, ok := _conn_n[key]; ok {
		return f(connDetails, conn, sensor, Execer, ExecerContext, Queryer, QueryerContext, ConnPrepareContext, NamedValueChecker)
	}

	return &wConn{
		Conn:        conn,
		connDetails: connDetails,
		sensor:      sensor,
	}
}

// driver.Conn Constructors

func get_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_Queryer_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_Queryer_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_Queryer_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_Queryer_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_Queryer_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_Execer_ExecerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_Queryer_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_Queryer_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Execer_Queryer_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Execer_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_Queryer_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_Execer_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_ExecerContext_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_ExecerContext_Queryer_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Queryer_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Execer_Queryer_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Execer_ExecerContext_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_QueryerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_QueryerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_Queryer_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_Queryer_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_Queryer(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_Queryer{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}}
}

func get_conn_Execer_Queryer_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_Queryer_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Queryer_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Queryer_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Queryer_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ExecerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ExecerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		}}
}

func get_conn_ExecerContext_Queryer(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_Queryer{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}}
}

func get_conn_QueryerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_QueryerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_ConnPrepareContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ConnPrepareContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_ExecerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_Execer_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_Queryer(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_Queryer{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}}
}

func get_conn_QueryerContext_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_QueryerContext_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_Execer_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_ExecerContext_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Queryer_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_QueryerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_QueryerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		QueryerContext: &wQueryerContext{
			QueryerContext: QueryerContext,
			connDetails:    connDetails,
			sensor:         sensor,
		}}
}

func get_conn_Execer(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Execer{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Execer: &wExecer{
			Execer:      Execer,
			connDetails: connDetails,
			sensor:      sensor,
		}}
}

func get_conn_ConnPrepareContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ConnPrepareContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ConnPrepareContext: &wConnPrepareContext{
			ConnPrepareContext: ConnPrepareContext,
			connDetails:        connDetails,
			sensor:             sensor,
		}}
}

func get_conn_Queryer(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_Queryer{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		Queryer: &wQueryer{
			Queryer:     Queryer,
			connDetails: connDetails,
			sensor:      sensor,
		}}
}

func get_conn_NamedValueChecker(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_NamedValueChecker{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_conn_ExecerContext(connDetails dbConnDetails, conn driver.Conn, sensor *Sensor, Execer driver.Execer, ExecerContext driver.ExecerContext, Queryer driver.Queryer, QueryerContext driver.QueryerContext, ConnPrepareContext driver.ConnPrepareContext, NamedValueChecker driver.NamedValueChecker) driver.Conn {
	return &w_conn_ExecerContext{
		Conn: &wConn{
			Conn:        conn,
			connDetails: connDetails,
			sensor:      sensor,
		},
		ExecerContext: &wExecerContext{
			ExecerContext: ExecerContext,
			connDetails:   connDetails,
			sensor:        sensor,
		}}
}

// driver.Stmt Constructors

func get_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		}, NamedValueChecker: NamedValueChecker,
		cc: ColumnConverter}
}

func get_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		}, NamedValueChecker: NamedValueChecker}
}

func get_stmt_StmtQueryContext_NamedValueChecker_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtQueryContext_NamedValueChecker_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		}, NamedValueChecker: NamedValueChecker,
		cc: ColumnConverter}
}

func get_stmt_StmtExecContext_NamedValueChecker_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext_NamedValueChecker_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		}, NamedValueChecker: NamedValueChecker,
		cc: ColumnConverter}
}

func get_stmt_StmtExecContext_StmtQueryContext_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext_StmtQueryContext_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		},
		cc: ColumnConverter}
}

func get_stmt_StmtQueryContext_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtQueryContext_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		},
		cc: ColumnConverter}
}

func get_stmt_StmtQueryContext_NamedValueChecker(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtQueryContext_NamedValueChecker{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		}, NamedValueChecker: NamedValueChecker}
}

func get_stmt_StmtExecContext_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		},
		cc: ColumnConverter}
}

func get_stmt_StmtExecContext_NamedValueChecker(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext_NamedValueChecker{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		}, NamedValueChecker: NamedValueChecker}
}

func get_stmt_NamedValueChecker_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_NamedValueChecker_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker,
		cc: ColumnConverter}
}

func get_stmt_StmtExecContext_StmtQueryContext(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext_StmtQueryContext{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		}}
}

func get_stmt_ColumnConverter(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_ColumnConverter{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		},
		cc: ColumnConverter}
}

func get_stmt_StmtExecContext(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtExecContext{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtExecContext: &wStmtExecContext{
			StmtExecContext: StmtExecContext,
			connDetails:     connDetails,
			sensor:          sensor,
			query:           query,
		}}
}

func get_stmt_NamedValueChecker(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_NamedValueChecker{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, NamedValueChecker: NamedValueChecker}
}

func get_stmt_StmtQueryContext(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor, StmtExecContext driver.StmtExecContext, StmtQueryContext driver.StmtQueryContext, NamedValueChecker driver.NamedValueChecker, ColumnConverter driver.ColumnConverter) driver.Stmt {
	return &w_stmt_StmtQueryContext{
		Stmt: &wStmt{
			Stmt:        stmt,
			connDetails: connDetails,
			query:       query,
			sensor:      sensor,
		}, StmtQueryContext: &wStmtQueryContext{
			StmtQueryContext: StmtQueryContext,
			connDetails:      connDetails,
			sensor:           sensor,
			query:            query,
		}}
}

// stmtAlreadyWrapped returns true if stmt is already instrumented
func stmtAlreadyWrapped(stmt driver.Stmt) bool {
	switch stmt.(type) {
	case *wStmt, *w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker_ColumnConverter, *w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker, *w_stmt_StmtQueryContext_NamedValueChecker_ColumnConverter, *w_stmt_StmtExecContext_NamedValueChecker_ColumnConverter, *w_stmt_StmtExecContext_StmtQueryContext_ColumnConverter, *w_stmt_StmtQueryContext_ColumnConverter, *w_stmt_StmtQueryContext_NamedValueChecker, *w_stmt_StmtExecContext_ColumnConverter, *w_stmt_StmtExecContext_NamedValueChecker, *w_stmt_NamedValueChecker_ColumnConverter, *w_stmt_StmtExecContext_StmtQueryContext, *w_stmt_ColumnConverter, *w_stmt_StmtExecContext, *w_stmt_NamedValueChecker, *w_stmt_StmtQueryContext:
		return true
	case w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker_ColumnConverter, w_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker, w_stmt_StmtQueryContext_NamedValueChecker_ColumnConverter, w_stmt_StmtExecContext_NamedValueChecker_ColumnConverter, w_stmt_StmtExecContext_StmtQueryContext_ColumnConverter, w_stmt_StmtQueryContext_ColumnConverter, w_stmt_StmtQueryContext_NamedValueChecker, w_stmt_StmtExecContext_ColumnConverter, w_stmt_StmtExecContext_NamedValueChecker, w_stmt_NamedValueChecker_ColumnConverter, w_stmt_StmtExecContext_StmtQueryContext, w_stmt_ColumnConverter, w_stmt_StmtExecContext, w_stmt_NamedValueChecker, w_stmt_StmtQueryContext:
		return true
	}
	return false
}

// wrapStmt wraps the matching type around the driver.Stmt based on which interfaces the driver implements
func wrapStmt(stmt driver.Stmt, query string, connDetails dbConnDetails, sensor *Sensor) driver.Stmt {
	var key int

	StmtExecContext, isStmtExecContext := stmt.(driver.StmtExecContext)
	StmtQueryContext, isStmtQueryContext := stmt.(driver.StmtQueryContext)
	NamedValueChecker, isNamedValueChecker := stmt.(driver.NamedValueChecker)
	ColumnConverter, isColumnConverter := stmt.(driver.ColumnConverter)

	if isStmtExecContext {
		key |= sStmtExecContext
	}
	if isStmtQueryContext {
		key |= sStmtQueryContext
	}
	if isNamedValueChecker {
		key |= sNamedValueChecker
	}
	if isColumnConverter {
		key |= sColumnConverter
	}

	if f, ok := _stmt_n[key]; ok {
		return f(stmt, query, connDetails, sensor, StmtExecContext, StmtQueryContext, NamedValueChecker, ColumnConverter)
	}

	return &wStmt{
		Stmt:        stmt,
		connDetails: connDetails,
		query:       query,
		sensor:      sensor,
	}
}

// A map of all possible driver.Conn types. The key represents which interfaces are "turned on". eg: 0b1001.
//
// In the example above, the following constructor is returned: get_conn_Queryer_NamedValueChecker
//
// Each bit sequentially represents the interfaces: Execer, ExecerContext, Queryer, QueryerContext, ConnPrepareContext, NamedValueChecker
var _conn_n = map[int]func(dbConnDetails, driver.Conn, *Sensor, driver.Execer, driver.ExecerContext, driver.Queryer, driver.QueryerContext, driver.ConnPrepareContext, driver.NamedValueChecker) driver.Conn{
	cExecer | cExecerContext | cQueryer | cQueryerContext | cConnPrepareContext | cNamedValueChecker: get_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryer | cQueryerContext | cConnPrepareContext:                      get_conn_Execer_ExecerContext_Queryer_QueryerContext_ConnPrepareContext,
	cExecerContext | cQueryer | cQueryerContext | cConnPrepareContext | cNamedValueChecker:           get_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecer | cQueryer | cQueryerContext | cConnPrepareContext | cNamedValueChecker:                  get_conn_Execer_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryerContext | cConnPrepareContext | cNamedValueChecker:            get_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryer | cConnPrepareContext | cNamedValueChecker:                   get_conn_Execer_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryer | cQueryerContext | cNamedValueChecker:                       get_conn_Execer_ExecerContext_Queryer_QueryerContext_NamedValueChecker,
	cExecer | cQueryer | cQueryerContext | cNamedValueChecker:                                        get_conn_Execer_Queryer_QueryerContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryer | cConnPrepareContext:                                        get_conn_Execer_ExecerContext_Queryer_ConnPrepareContext,
	cQueryer | cQueryerContext | cConnPrepareContext | cNamedValueChecker:                            get_conn_Queryer_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecerContext | cQueryerContext | cConnPrepareContext | cNamedValueChecker:                      get_conn_ExecerContext_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecer | cQueryerContext | cConnPrepareContext | cNamedValueChecker:                             get_conn_Execer_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecerContext | cQueryer | cConnPrepareContext | cNamedValueChecker:                             get_conn_ExecerContext_Queryer_ConnPrepareContext_NamedValueChecker,
	cExecer | cQueryer | cConnPrepareContext | cNamedValueChecker:                                    get_conn_Execer_Queryer_ConnPrepareContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryer | cQueryerContext:                                            get_conn_Execer_ExecerContext_Queryer_QueryerContext,
	cExecer | cExecerContext | cConnPrepareContext | cNamedValueChecker:                              get_conn_Execer_ExecerContext_ConnPrepareContext_NamedValueChecker,
	cExecerContext | cQueryer | cQueryerContext | cNamedValueChecker:                                 get_conn_ExecerContext_Queryer_QueryerContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryerContext | cNamedValueChecker:                                  get_conn_Execer_ExecerContext_QueryerContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryer | cNamedValueChecker:                                         get_conn_Execer_ExecerContext_Queryer_NamedValueChecker,
	cExecerContext | cQueryer | cQueryerContext | cConnPrepareContext:                                get_conn_ExecerContext_Queryer_QueryerContext_ConnPrepareContext,
	cExecer | cQueryer | cQueryerContext | cConnPrepareContext:                                       get_conn_Execer_Queryer_QueryerContext_ConnPrepareContext,
	cExecer | cExecerContext | cQueryerContext | cConnPrepareContext:                                 get_conn_Execer_ExecerContext_QueryerContext_ConnPrepareContext,
	cExecer | cConnPrepareContext | cNamedValueChecker:                                               get_conn_Execer_ConnPrepareContext_NamedValueChecker,
	cExecer | cQueryer | cQueryerContext:                                                             get_conn_Execer_Queryer_QueryerContext,
	cExecer | cQueryerContext | cConnPrepareContext:                                                  get_conn_Execer_QueryerContext_ConnPrepareContext,
	cExecerContext | cQueryerContext | cConnPrepareContext:                                           get_conn_ExecerContext_QueryerContext_ConnPrepareContext,
	cExecerContext | cQueryer | cConnPrepareContext:                                                  get_conn_ExecerContext_Queryer_ConnPrepareContext,
	cQueryer | cQueryerContext | cConnPrepareContext:                                                 get_conn_Queryer_QueryerContext_ConnPrepareContext,
	cExecer | cQueryer | cConnPrepareContext:                                                         get_conn_Execer_Queryer_ConnPrepareContext,
	cExecer | cExecerContext | cQueryerContext:                                                       get_conn_Execer_ExecerContext_QueryerContext,
	cQueryerContext | cConnPrepareContext | cNamedValueChecker:                                       get_conn_QueryerContext_ConnPrepareContext_NamedValueChecker,
	cExecerContext | cQueryer | cQueryerContext:                                                      get_conn_ExecerContext_Queryer_QueryerContext,
	cQueryer | cConnPrepareContext | cNamedValueChecker:                                              get_conn_Queryer_ConnPrepareContext_NamedValueChecker,
	cExecerContext | cConnPrepareContext | cNamedValueChecker:                                        get_conn_ExecerContext_ConnPrepareContext_NamedValueChecker,
	cExecer | cExecerContext | cNamedValueChecker:                                                    get_conn_Execer_ExecerContext_NamedValueChecker,
	cExecer | cExecerContext | cQueryer:                                                              get_conn_Execer_ExecerContext_Queryer,
	cExecer | cQueryer | cNamedValueChecker:                                                          get_conn_Execer_Queryer_NamedValueChecker,
	cExecerContext | cQueryer | cNamedValueChecker:                                                   get_conn_ExecerContext_Queryer_NamedValueChecker,
	cExecer | cExecerContext | cConnPrepareContext:                                                   get_conn_Execer_ExecerContext_ConnPrepareContext,
	cQueryer | cQueryerContext | cNamedValueChecker:                                                  get_conn_Queryer_QueryerContext_NamedValueChecker,
	cExecer | cQueryerContext | cNamedValueChecker:                                                   get_conn_Execer_QueryerContext_NamedValueChecker,
	cExecerContext | cQueryerContext | cNamedValueChecker:                                            get_conn_ExecerContext_QueryerContext_NamedValueChecker,
	cQueryer | cConnPrepareContext:                                                                   get_conn_Queryer_ConnPrepareContext,
	cQueryer | cNamedValueChecker:                                                                    get_conn_Queryer_NamedValueChecker,
	cExecer | cExecerContext:                                                                         get_conn_Execer_ExecerContext,
	cExecerContext | cQueryer:                                                                        get_conn_ExecerContext_Queryer,
	cQueryerContext | cConnPrepareContext:                                                            get_conn_QueryerContext_ConnPrepareContext,
	cConnPrepareContext | cNamedValueChecker:                                                         get_conn_ConnPrepareContext_NamedValueChecker,
	cExecer | cQueryerContext:                                                                        get_conn_Execer_QueryerContext,
	cExecerContext | cNamedValueChecker:                                                              get_conn_ExecerContext_NamedValueChecker,
	cExecerContext | cQueryerContext:                                                                 get_conn_ExecerContext_QueryerContext,
	cExecer | cNamedValueChecker:                                                                     get_conn_Execer_NamedValueChecker,
	cExecer | cQueryer:                                                                               get_conn_Execer_Queryer,
	cQueryerContext | cNamedValueChecker:                                                             get_conn_QueryerContext_NamedValueChecker,
	cExecer | cConnPrepareContext:                                                                    get_conn_Execer_ConnPrepareContext,
	cExecerContext | cConnPrepareContext:                                                             get_conn_ExecerContext_ConnPrepareContext,
	cQueryer | cQueryerContext:                                                                       get_conn_Queryer_QueryerContext,
	cQueryerContext:                                                                                  get_conn_QueryerContext,
	cExecer:                                                                                          get_conn_Execer,
	cConnPrepareContext:                                                                              get_conn_ConnPrepareContext,
	cQueryer:                                                                                         get_conn_Queryer,
	cNamedValueChecker:                                                                               get_conn_NamedValueChecker,
	cExecerContext:                                                                                   get_conn_ExecerContext,
}

// A map of all possible driver.Stmt types. The key represents which interfaces are "turned on". eg: 0b1001.
//
// In the example above, the following constructor is returned: get_stmt_StmtExecContext_ColumnConverter
//
// Each bit sequentially represents the interfaces: StmtExecContext, StmtQueryContext, NamedValueChecker, ColumnConverter
var _stmt_n = map[int]func(driver.Stmt, string, dbConnDetails, *Sensor, driver.StmtExecContext, driver.StmtQueryContext, driver.NamedValueChecker, driver.ColumnConverter) driver.Stmt{
	sStmtExecContext | sStmtQueryContext | sNamedValueChecker | sColumnConverter: get_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker_ColumnConverter,
	sStmtExecContext | sStmtQueryContext | sNamedValueChecker:                    get_stmt_StmtExecContext_StmtQueryContext_NamedValueChecker,
	sStmtQueryContext | sNamedValueChecker | sColumnConverter:                    get_stmt_StmtQueryContext_NamedValueChecker_ColumnConverter,
	sStmtExecContext | sNamedValueChecker | sColumnConverter:                     get_stmt_StmtExecContext_NamedValueChecker_ColumnConverter,
	sStmtExecContext | sStmtQueryContext | sColumnConverter:                      get_stmt_StmtExecContext_StmtQueryContext_ColumnConverter,
	sStmtQueryContext | sColumnConverter:                                         get_stmt_StmtQueryContext_ColumnConverter,
	sStmtQueryContext | sNamedValueChecker:                                       get_stmt_StmtQueryContext_NamedValueChecker,
	sStmtExecContext | sColumnConverter:                                          get_stmt_StmtExecContext_ColumnConverter,
	sStmtExecContext | sNamedValueChecker:                                        get_stmt_StmtExecContext_NamedValueChecker,
	sNamedValueChecker | sColumnConverter:                                        get_stmt_NamedValueChecker_ColumnConverter,
	sStmtExecContext | sStmtQueryContext:                                         get_stmt_StmtExecContext_StmtQueryContext,
	sColumnConverter:                                                             get_stmt_ColumnConverter,
	sStmtExecContext:                                                             get_stmt_StmtExecContext,
	sNamedValueChecker:                                                           get_stmt_NamedValueChecker,
	sStmtQueryContext:                                                            get_stmt_StmtQueryContext,
}
